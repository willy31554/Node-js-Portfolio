const fs = require('fs');
const csv = require('csv-parser');
const axios = require('axios');

const CSV_FILE_PATH = 'transactions.csv';

async function main(token, date) {
  // Read the CSV file and parse the transactions
  const transactions = [];
  fs.createReadStream(CSV_FILE_PATH)
    .pipe(csv())
    .on('data', (data) => {
      transactions.push(data);
    });

  // Get the exchange rates from Cryptocompare
  const exchangeRates = await axios.get('https://min-api.cryptocompare.com/data/price');

  // Calculate the portfolio value at the specified date
  let portfolioValue = 0;
  for (const transaction of transactions) {
    if (transaction.timestamp > date) {
      // Stop processing transactions if we have reached a date after the specified date
      break;
    }
    if (transaction.transaction_type === 'DEPOSIT') {
      portfolioValue += transaction.amount * exchangeRates[transaction.token];
    } else if (transaction.transaction_type === 'WITHDRAWAL') {
      portfolioValue -= transaction.amount * exchangeRates[transaction.token];
    }
  }

  // Filter the portfolio value by token if a token is specified
  if (token) {
    portfolioValue = portfolioValue * exchangeRates[token];
  }

  console.log(portfolioValue);
}

// Parse the command line arguments
const token = process.argv[2];
const date = process.argv[3];

main(token, date);
